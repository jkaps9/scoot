@use "fonts";
@use "reset";
@use "variables";
@use "utilities";
@use "sass:map";

// Global Styles
body {
  font-family: "Lexend Deca", sans-serif;
  font-size: 15px;
  font-weight: 400;
  line-height: 1.6;

  background-color: map.get(variables.$colors, "white");
  color: map.get(variables.$colors, "dim-grey");
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Space Mono", sans-serif;
  line-height: 1;
  letter-spacing: -0.04em;
  color: map.get(variables.$colors, "dark-navy");
}

h1 {
  font-size: clamp(2.5rem, 2.1479rem + 1.5023vw, 3.5rem);
}

h2 {
  font-size: clamp(2rem, 1.0458rem + 4.0712vw, 3rem);
}

h3 {
  font-size: clamp(1.125rem, 0.6408rem + 2.0657vw, 2.5rem);
}

h4 {
  font-size: clamp(1.125rem, 0.7672rem + 1.5267vw, 1.5rem);
}

a {
  text-decoration: none;
  color: inherit;
}

button {
  cursor: pointer;
}

img {
  max-width: 100%;
}

.navbar {
  padding: 2rem 0;
  display: flex;
  align-items: center;

  position: relative;

  .logo {
    margin: 0 auto;
  }

  .nav__list {
    display: flex;
    gap: 2rem;
  }

  .nav__item {
    font-family: "Space Mono", sans-serif;
  }

  .socials__list {
    display: flex;
    gap: 1.5rem;
  }
}

header {
  .nav-toggle {
    position: absolute;
    left: 0;

    background: none;
    border: none;
  }

  .main-nav {
    visibility: hidden;
    height: 0;
    position: absolute;
  }

  .main-nav.visible {
    visibility: visible;
    height: auto;
    position: absolute;
  }

  .cta {
    margin-left: auto;
  }

  .cta {
    visibility: hidden;
    height: 0;
    position: absolute;
  }
}

.hero {
  text-align: center;
  color: map.get(variables.$colors, "white");
  background-image: url("/assets/images/home-hero-mobile.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  min-height: 40.625rem;
  position: relative;

  h1 {
    color: inherit;
  }

  .container {
    padding-top: clamp(7.1875rem, 6.3512rem + 3.5681vw, 9.5625rem);
  }

  p {
    margin: 1.5rem 0 2rem;
  }

  .arrow {
    position: absolute;
    left: -85%;
    bottom: 2rem;
  }

  .circles,
  .line {
    visibility: hidden;
    height: 0;
    position: absolute;
  }
}

.side-by-side {
  margin: 7.5rem 0;
  position: relative;

  .container {
    text-align: center;
    place-items: center;
  }

  img {
    border-radius: 100vw;
  }
  .content {
    margin-top: 3.5rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
  }

  .left-downward-arrow,
  .right-arrow,
  .circle {
    // TODO: position svgs appropriately
    visibility: hidden;
    height: 0;
    position: absolute;
  }

  &:nth-child(2) {
    .left-downward-arrow {
      visibility: visible;
      height: auto;
      top: clamp(10.8125rem, 2.8211rem + 34.0967vw, 19.1875rem);
      left: 2rem;
    }
  }

  &:nth-child(3) {
    .right-arrow {
      visibility: visible;
      height: auto;
      top: 0;
      left: calc(-1 * clamp(6.4375rem, 17.0635rem + -22.1374vw, 11.875rem));
    }
  }

  &:nth-child(4) {
    .left-downward-arrow {
      visibility: visible;
      height: auto;
      top: clamp(0rem, -5.0692rem + 21.6285vw, 5.3125rem);
      left: clamp(6.5rem, -12.2858rem + 80.1527vw, 26.1875rem);
    }
  }
}

footer {
  background-color: map.get(variables.$colors, "very-dark-navy");

  .cta {
    z-index: 2;
    min-height: clamp(18.75rem, 21.1927rem + -5.0891vw, 20rem);
    background-color: map.get(variables.$colors, "dark-navy");
    place-content: center;
    position: relative;

    .semi-circles {
      position: absolute;
      bottom: 0;
      right: -10.1875rem;
    }

    h2 {
      margin-bottom: 2.5rem;
      text-align: center;
      color: map.get(variables.$colors, "white");
    }

    .buttons {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.75rem;
    }
  }

  .navbar {
    flex-direction: column;
    padding: clamp(2rem, 5.9084rem + -8.1425vw, 4rem) 0
      clamp(2rem, 8.8397rem + -14.2494vw, 5.5rem);
    .logo {
      margin-bottom: 2.5rem;
      path {
        fill: map.get(variables.$colors, "white");
      }
    }

    .nav__list {
      flex-direction: column;
      align-items: center;
      gap: clamp(1rem, 0.0458rem + 4.0712vw, 2rem);
      margin-bottom: 5.25rem;
    }
  }
}

.page-header {
  position: relative;
  min-height: clamp(10rem, 7.6145rem + 10.1781vw, 12.5rem);
  display: flex;
  place-items: center;

  .bg-image,
  .circles {
    position: absolute;
  }

  .circles {
    visibility: hidden;
    height: 0;
  }

  h1 {
    text-align: center;
    color: map.get(variables.$colors, "white");
  }
}

.process {
  padding: 7.5rem 0;
  text-align: center;

  .container {
    display: flex;
    flex-direction: column;
    gap: clamp(1.875rem, 3.3961rem + -1.6901vw, 3rem);
  }

  .process__item,
  .process__item .content {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .process__item {
    gap: clamp(1.5rem, 1.1479rem + 1.5023vw, 2.5rem);
  }

  .line {
    visibility: hidden;
    height: 0;
    position: absolute;
  }
  // TODO: reduce size of icons
}

.values {
  padding: 7.5rem 0;
  text-align: center;

  h2 {
    margin-bottom: 0.5rem;
  }

  .container,
  .content,
  .value__item,
  .item-container {
    display: flex;
    flex-direction: column;
    gap: 3.5rem;
  }

  .content {
    gap: 1.5rem;
  }

  figure {
    display: flex;
    flex-direction: column;
    align-items: center;

    img {
      max-height: 15rem;
      max-width: 15rem;
      border-radius: 100vw;
    }

    figcaption {
      display: flex;
      justify-content: center;
      align-items: center;

      border-radius: 100vw;
      background-color: map.get(variables.$colors, "yellow");
      $size: 6rem;
      width: $size;
      height: $size;
      margin-top: calc(-1 * $size/2);
    }
  }

  .value__item {
    gap: clamp(1rem, 0.6479rem + 1.5023vw, 2rem);
  }
}

.faq {
  margin: 7.5rem 0;
  text-align: center;

  .container,
  .faqs-container,
  .faq__section,
  .faq__item-container,
  .faq__item {
    display: flex;
    flex-direction: column;
    gap: clamp(3rem, 2.0458rem + 4.0712vw, 4rem);
  }

  .faq__section {
    gap: 2rem;
  }

  .faq__item-container {
    flex-grow: 1;
    gap: 1rem;
  }

  .faq__item {
    gap: 1.5rem;
    background-color: map.get(variables.$colors, "snow");
    padding: 2rem 1.75rem;
    text-align: start;

    p {
      color: map.get(variables.$colors, "dark-navy");
    }
  }

  .faq__item--title-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
    cursor: pointer;
  }

  .faq__item--answer {
    visibility: hidden;
    height: 0;
    position: absolute;
  }

  .faq__item--answer.visible {
    visibility: visible;
    height: auto;
    position: relative;
  }

  .chevron {
    transition: rotate 0.3s ease-in-out;
  }

  .faq__item:has(.faq__item--answer.visible) .chevron {
    rotate: 180deg;
  }
}

.map {
  margin: 4.5rem 0;

  .location__list {
    margin-top: 2.5rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    text-align: center;
  }

  .location__item {
    background-color: rgba(map.get(variables.$colors, "yellow"), 0.15);
    padding: 1.5rem 0;
  }
}

.location-cta {
  margin: 4.5rem 0;

  .container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    text-align: center;
  }
}

@media (min-width: 48rem) {
  .navbar {
    .logo {
      margin-left: 0;
      margin-right: 3.625rem;
    }

    .socials__list {
      margin-left: auto;
    }
  }

  header {
    .nav-toggle {
      visibility: hidden;
      height: 0;
      position: absolute;
    }

    .main-nav {
      visibility: visible;
      height: auto;
      position: relative;
    }

    .cta {
      visibility: visible;
      height: auto;
      position: relative;
    }
  }

  .hero {
    background-image: url("/assets/images/home-hero-tablet.jpg");

    .arrow {
      left: -7.94rem;
    }

    .circles {
      visibility: visible;
      height: auto;
      bottom: 3em;
      right: -2rem;
    }
  }

  .side-by-side {
    .content {
      max-width: 75%;
    }

    .circle {
      visibility: visible;
      height: auto;
      top: 0;
      z-index: -1;
    }

    &:nth-child(2),
    &:nth-child(4) {
      .circle {
        right: -21.875rem;
      }
    }

    &:nth-child(3) {
      .circle {
        left: -21.875rem;
      }
    }

    &:nth-child(2) {
      .left-downward-arrow {
        right: 0;
        left: auto;
      }
    }
  }

  footer {
    .navbar {
      flex-direction: row;

      .nav__list {
        flex-direction: row;
        margin-bottom: 0;
      }

      .logo {
        margin-bottom: 0;
      }
    }
  }

  .page-header {
    .container {
      margin: auto;
    }

    h1 {
      text-align: start;
    }

    .circles {
      visibility: visible;
      height: auto;
      right: -1rem;
    }
  }

  .process {
    text-align: start;
    position: relative;
    $icon-width: 6rem;

    .line {
      $line-width: 67vw;
      $line-height: 1rem;

      visibility: visible;
      height: auto;
      width: $line-width;
      height: $line-height;
      background-color: map.get(variables.$colors, "light-grey");
      top: 0;

      // half of line width less half of the height
      $line-offset: calc($line-width/2 - $line-height/2);

      // 5% is left half of the container "padding"
      left: calc(-1 * ($line-offset - $icon-width/2) + 5%);
      top: calc($line-offset);
      rotate: 90deg;
    }

    .process__item {
      flex-direction: row;
    }
  }

  .values {
    h2 {
      margin-bottom: 3.5rem;
    }
  }

  .map {
    // TODO: add arrow below location on map
    picture {
      display: relative;
    }

    .location__item {
      position: absolute;
      background-color: rgba(map.get(variables.$colors, "yellow"), 1);
      width: 7.5rem;
      padding: 0;

      &:nth-child(1) {
        top: 3.5rem;
        left: 6rem;
      }
      &:nth-child(2) {
        top: 1.75rem;
        left: 15.5rem;
      }
      &:nth-child(3) {
        top: 10.75rem;
        right: 6rem;
      }
      &:nth-child(4) {
        top: 4.25rem;
        right: 2.5rem;
      }
    }
  }
}

@media (min-width: 64rem) {
  .side-by-side {
    .container {
      text-align: start;
      display: flex;
      justify-content: space-between;
    }

    &:nth-child(even) .container {
      flex-direction: row-reverse;
    }

    &:nth-child(4) {
      .left-downward-arrow {
        left: auto;
        right: -23.75rem;
      }
    }

    .content {
      max-width: 445px;
      align-items: flex-start;
    }
  }

  footer {
    .cta {
      .container {
        display: flex;
        justify-content: space-between;
      }

      .content {
        max-width: 26rem;
      }

      h2 {
        text-align: start;
        margin-bottom: 0;
      }
    }
  }

  .process {
    .line {
      rotate: none;
      left: 0;
      $padding: 7.5rem;
      $icon-height: 6rem;
      top: calc($padding + $icon-height/2);
    }

    .container {
      flex-direction: row;
      justify-content: space-between;
    }
    .process__item {
      flex-direction: column;
    }
  }

  .values {
    .item-container {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: calc(2rem - 2px);
    }
  }

  .faq {
    .faq__section {
      flex-direction: row;
      justify-content: space-between;
    }

    .faq__item-container {
      max-width: 50vw;
    }
  }

  .map {
    .location__item {
      padding: 1.5rem 0;
      width: 11.8125rem;
      &:nth-child(1) {
        top: 5.25rem;
        left: 12rem;
      }
      &:nth-child(2) {
        top: 4rem;
        left: 26rem;
      }
      &:nth-child(3) {
        top: 16rem;
        right: 8rem;
      }
      &:nth-child(4) {
        top: 5rem;
        right: 5rem;
      }
    }
  }

  .location-cta {
    .container {
      flex-direction: row;
      text-align: start;
    }

    h2 {
      width: 32%;
    }

    p {
      width: 40%;
    }

    a {
      margin-left: auto;
    }
  }
}

@media (min-width: 80rem) {
  .hero {
    // TODO: fix svgs to be more dynamic so they adapt with the screen
    background-image: url("/assets/images/home-hero-desktop.jpg");
    text-align: start;
    place-content: start;

    .content {
      display: flex;
      flex-direction: column;
      max-width: 31.25rem;

      .inner-content {
        align-self: flex-end;
        max-width: 25rem;
      }
    }
    .arrow {
      bottom: 10.325rem;
      left: 44rem;
    }

    .circles {
      bottom: 11rem;
      right: -3rem;
    }

    .line {
      visibility: visible;
      height: auto;
      bottom: 19rem;
      left: 0;
    }
  }
}
